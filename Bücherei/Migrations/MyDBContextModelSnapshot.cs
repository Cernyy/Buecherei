// <auto-generated />
using System;
using Bücherei.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bücherei.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bücherei.Models.Ausleihe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Ausleihdatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ausweisnummer")
                        .HasColumnType("int");

                    b.Property<string>("Buchnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime?>("Retourdatum")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Ausweisnummer");

                    b.HasIndex("Buchnummer");

                    b.ToTable("TblAusleihe");
                });

            modelBuilder.Entity("Bücherei.Models.Buch", b =>
                {
                    b.Property<string>("Buchnummer")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Erscheinungsjahr")
                        .HasColumnType("int");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sachgebiet")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Buchnummer");

                    b.ToTable("TblBuch");
                });

            modelBuilder.Entity("Bücherei.Models.SchuelerIn", b =>
                {
                    b.Property<int>("Ausweisnummer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Ausweisnummer");

                    b.ToTable("TblSchuelerIn");
                });

            modelBuilder.Entity("Bücherei.Models.Ausleihe", b =>
                {
                    b.HasOne("Bücherei.Models.SchuelerIn", "SchuelerIn")
                        .WithMany("Ausleihen")
                        .HasForeignKey("Ausweisnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bücherei.Models.Buch", "Buch")
                        .WithMany("Ausleihen")
                        .HasForeignKey("Buchnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buch");

                    b.Navigation("SchuelerIn");
                });

            modelBuilder.Entity("Bücherei.Models.Buch", b =>
                {
                    b.Navigation("Ausleihen");
                });

            modelBuilder.Entity("Bücherei.Models.SchuelerIn", b =>
                {
                    b.Navigation("Ausleihen");
                });
#pragma warning restore 612, 618
        }
    }
}
